// Place your key bindings in this file to override the defaultsauto[]
[
    //  ctrl+shift+w: close file
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    // ctrl+w: the prefix key of neovim windows operation
    {
        "key": "ctrl+w",
        "command": "cjkWordHandler.deleteWordStartLeft",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    // ctrl+f: find content
    {
        "key": "ctrl+f",
        "command": "-vscode-neovim.ctrl-f",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    // ctrl+c: copy in normal mode
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    // ctrl+z: undo
    {
        "key": "ctrl+z",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    // {
    //     "key": "u",
    //     "command": "undo",
    //     "when": "editorTextFocus && neovim.mode != insert",
    // },
    // u/ctrl+r: redo
    {
        "key": "ctrl+r",
        "command": "redo",
        "when": "editorTextFocus",
    },
    // ctrl+a/e: move the cursor to start/end of the line
    {
        "key": "ctrl+a",
        "command": "cursorLineStart",
        "when": "editorTextFocus && neovim.mode != 'visual'",
    },
    {
        "key": "ctrl+e",
        "command": "cursorLineEnd",
        "when": "editorTextFocus && neovim.mode != 'visual'",
    },
    {
        "key": "ctrl+e",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && neovim.mode == 'visual'",
        "args": "$"
    },
    {
        "key": "ctrl+e",
        "command": "-vscode-neovim.ctrl-e",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    // ctrl+left/right: move the cursor one word to the left/right
    {
        "key": "ctrl+left",
        "command": "vscode-neovim.send",
        "args": "b",
        "when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+left",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+right",
        "command": "vscode-neovim.send",
        "args": "w",
        "when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+right",
        "command": "-vscode-neovim.send",
        "when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
    },
    // shift+up/down/left/right: shift the line to the up/down/left/right
    {
        "key": "shift+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+left",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && neovim.mode == insert",
    },
    {
        "key": "shift+right",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && neovim.mode == insert",
    },
    // tab/shift+tab: switch to next/previous group
    {
        "key": "tab",
        "command": "workbench.action.focusNextGroup",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.focusPreviousGroup",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    // ctrl+m: bookmark
    {
        "key": "ctrl+m m",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "ctrl+m i",
        "command": "bookmarks.toggleLabeled",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "ctrl+m l",
        "command": "bookmarks.list",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "ctrl+m shift+l",
        "command": "bookmarks.listFromAllFiles",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "ctrl+m c",
        "command": "bookmarks.clear",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "ctrl+m shift+c",
        "command": "bookmarks.clearFromAllFiles",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "ctrl+m n",
        "command": "bookmarks.jumpToNext",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    {
        "key": "ctrl+m b",
        "command": "bookmarks.jumpToPrevious",
        "when": "editorTextFocus && neovim.mode != insert"
    },
    // tab/shift+tab: next/previous suggestion item
    {
        "key": "tab",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    // ctrl+\: trigger suggestion
    {
        "key": "ctrl+oem_5",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    // alt+\: search snippet
    {
        "key": "alt+oem_5",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus"
    },
    // ctrl+n/ctrl+shift+n: add a cursor on the next word
    {
        "key": "ctrl+n",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "editor.action.addSelectionToPreviousFindMatch"
    },
    // f1: toggle side bar
    {
        "key": "f1",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    // alt+`: open terminal
    {
        "key": "alt+oem_3",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    // shift+alt+h: add file header to the top
    {
        "key": "shift+alt+h",
        "command": "file-header.insert",
        "when": "editorTextFocus"
    },
    // shift+alt+t: tanslate selected text
    {
        "key": "shift+alt+t",
        "command": "translator.translate"
    },
    // alt+t: toggle capture word
    {
        "key": "alt+t",
        "command": "translator.toggleCaptureWord"
    },
    // shift+alt+e: open active file in explorer
    {
        "key": "shift+alt+e",
        "command": "remote-wsl.revealInExplorer",
        "when": "editorFocus && remoteName == 'wsl'"
    },
    {
        "key": "shift+alt+e",
        "command": "revealFileInOS",
        "when": "!editorFocus"
    },
    // shift+alt+r: run code
    {
        "key": "shift+alt+r",
        "command": "code-runner.run"
    },
    {
        "key": "shift+alt+r",
        "command": "-remote-wsl.revealInExplorer",
        "when": "editorFocus && remoteName == 'wsl'"
    },
    {
        "key": "shift+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    // shift+alt+c: caclulator
    {
        "key": "shift+alt+c",
        "command": "calculator.showInput"
    },
    // ctrl+k: vscode key prefix
    {
        "key": "ctrl+k",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    // ctrl+k o: open file
    {
        "key": "ctrl+k o",
        "command": "workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile",
        "when": "true"
    },
    // ctrl+k r: open rencent file
    {
        "key": "ctrl+k r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    // ctrl+k w: close other editors
    {
        "key": "ctrl+k w",
        "command": "workbench.action.closeOtherEditors"
    },
    // ctrl+k n: new file
    {
        "key": "ctrl+k n",
        "command": "workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    // ctrl+l/k: delete one/all char to the right of the cursor
    {
        "key": "ctrl+l",
        "command": "cjkWordHandler.deleteWordEndRight",
        "when": "editorTextFocus && neovim.mode == insert",
    },
    {
        "key": "ctrl+k",
        "command": "deleteAllRight",
        "when": "editorTextFocus && neovim.mode == insert",
    },
    // scroll page/line
    {
        "key": "ctrl+up",
        "command": "-vscode-neovim.send",
        "when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+up",
        "command": "-scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+down",
        "command": "scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+down",
        "command": "-vscode-neovim.send",
        "when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+down",
        "command": "-scrollLineDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+up",
        "command": "scrollLineDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "scrollPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-vscode-neovim.ctrl-d",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+b",
        "command": "scrollPageUp",
        "when": "editorTextFocus && neovim.mode != insert",
    },
    {
        "key": "ctrl+b",
        "command": "-vscode-neovim.ctrl-b",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    // shift+enter: enable in markdown file
    {
        "key": "shift+enter",
        "command": "-markdown-preview-enhanced.runCodeChunk",
        "when": "editorLangId == 'markdown'"
    },
]