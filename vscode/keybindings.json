[
  // https://github.com/vscode-neovim/vscode-neovim#-how-it-works
  // In insert mode, map control keys to vscode-command by vscode-keybind,
  // and map normal keys to vscode-command by also vscode keybind.
  // In other mode, map control keys to neovim-map(vscode-neovim.send) or vscode-command by vscode keybind,
  // and map normal keys to neovim-map or vscode-command(VSCodeNotify) by neovim init.vim

  // 屏幕滚动
  // ctrl+d: scroll page down
  {
    "key": "ctrl+d",
    "command": "editorScroll",
    "args": {
      "to": "down",
      "by": "halfPage",
      "revealCursor": false,
      "value": 1
    },
    "when": "textInputFocus && neovim.mode != insert"
  },
  // ctrl+u: scroll page up
  {
    "key": "ctrl+u",
    "command": "editorScroll",
    "args": {
      "to": "up",
      "by": "halfPage",
      "revealCursor": false,
      "value": 1
    },
    "when": "textInputFocus && neovim.mode != insert"
  },

  // 全文搜索
  // ctrl+f: find content
  {
    "key": "ctrl+f",
    "command": "vscode-neovim.send",
    "args": "<C-F>",
    "when": "editorFocus && neovim.mode == visual"
  },
  {
    "key": "ctrl+f",
    "command": "-vscode-neovim.ctrl-f"
  },

  // 快速编辑
  // jj/jk: escape
  {
    "key": "j",
    "command": "vscode-neovim.compositeEscape1",
    "when": "editorTextFocus && neovim.mode == insert",
    "args": "j"
  },
  {
    "key": "k",
    "command": "vscode-neovim.compositeEscape2",
    "when": "editorTextFocus && neovim.mode == insert",
    "args": "k"
  },
  // ctrl+shift+j: shift the line to the down
  {
    "key": "ctrl+shift+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // ctrl+shift+k: shift the line to the up
  {
    "key": "ctrl+shift+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // ctrl+j: insert line below
  {
    "key": "ctrl+j",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  // ctrl+w: delete word left
  {
    "key": "ctrl+w",
    "command": "cjkWordHandler.deleteWordStartLeft",
    "when": "editorTextFocus && neovim.mode == insert"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  // ctrl+l: right a word
  {
    "key": "ctrl+l",
    "command": "cursorWordRight",
    "when": "editorTextFocus && neovim.mode == insert"
  },
  // ctrl+z: undo
  {
    "key": "ctrl+z",
    "command": "undo"
  },
  // ctrl+r: redo
  {
    "key": "ctrl+r",
    "command": "redo",
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "ctrl+r ctrl+r",
    "command": "redo",
    "when": "editorTextFocus && neovim.mode == insert"
  },
  // ctrl+n: add a cursor on the next word
  {
    "key": "ctrl+n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "vscode-neovim.send",
    "args": "<C-N>",
    "when": "editorTextFocus && neovim.mode == visual"
  },
  // ctrl+shift+n: add a cursor on the previous word
  {
    "key": "ctrl+shift+n",
    "command": "editor.action.addSelectionToPreviousFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "vscode-neovim.send",
    "args": "<C-S-N>",
    "when": "editorTextFocus && neovim.mode == visual"
  },
  // ctrl+shift+l: add a cursor on all match word
  {
    "key": "ctrl+shift+l",
    "command": "vscode-neovim.send",
    "args": "<C-S-L>",
    "when": "editorTextFocus && neovim.mode == visual"
  },

  // 文件操作
  // ctrl+k o: open file
  {
    "key": "ctrl+k o",
    "command": "workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile",
    "when": "true"
  },
  // ctrl+k n: new file
  {
    "key": "ctrl+k n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  // ctrl+k r: open rencent file
  {
    "key": "ctrl+k r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  // tab/shift+tab: switch file editor
  {
    "key": "tab",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "explorerViewletFocus"
  },
  {
    "key": "tab",
    "command": "workbench.action.focusNextGroup",
    "when": "editorTextFocus && neovim.mode != insert"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.focusPreviousGroup",
    "when": "editorTextFocus && neovim.mode != insert"
  },
  //  ctrl+shift+w: close file
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  // ctrl+k: delete all char to the right of the cursor
  // Define after all other ctrl+k prefix keybinds!
  {
    "key": "ctrl+k",
    "command": "deleteAllRight",
    "when": "editorTextFocus && neovim.mode == insert"
  },

  // 界面元素
  // f1: toggle side bar
  {
    "key": "f1",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  // ctrl+shift+g: vcs
  {
    "key": "ctrl+shift+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },

  // 语言服务
  // ctrl+i: toggle suggest widget
  {
    "key": "ctrl+i",
    "command": "editor.action.triggerSuggest",
    "when": "!suggestWidgetVisible && editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+i",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  // alt+i: search snippet
  {
    "key": "alt+i",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus"
  },

  // 其他按键
  // alt+e: open active file in explorer
  {
    "key": "alt+e",
    "command": "revealFileInOS",
    "when": "editorFocus"
  },
  {
    "key": "alt+e",
    "command": "remote-wsl.revealInExplorer",
    "when": "editorFocus && remoteName == 'wsl'"
  },
  // alt+r: run code
  {
    "key": "alt+r",
    "command": "code-runner.run"
  },
  // alt+t: toggle translator capture word
  {
    "key": "alt+t",
    "command": "translator.toggleCaptureWord"
  },
  // alt+shift+t: replace text with translation
  {
    "key": "alt+shift+t",
    "command": "vscode-neovim.send",
    "args": "<M-T>",
    "when": "editorFocus && neovim.mode == visual"
  }
]
